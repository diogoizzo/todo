{"version":3,"sources":["components/Form.jsx","components/Todo.jsx","components/Todolist.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","imputHandler","e","console","log","target","value","props","setInputText","submitHandler","preventDefault","setTodo","todos","text","inputText","completed","id","Math","random","statusHandler","setStatus","this","onChange","type","className","onClick","name","Component","Todo","todo","useState","divClass","setDivClass","map","item","novoTodo","filter","el","setTimeout","TodoList","filtered","App","status","setFiltered","useEffect","localStorage","getItem","local","JSON","parse","filterHandler","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAEqBA,E,4MACjBC,aAAe,SAAAC,GACXC,QAAQC,IAAIF,EAAEG,OAAOC,OACrB,EAAKC,MAAMC,aAAaN,EAAEG,OAAOC,Q,EAGrCG,cAAgB,SAAAP,GACZA,EAAEQ,iBACF,EAAKH,MAAMI,QAAX,sBAAuB,EAAKJ,MAAMK,OAAlC,CAAwC,CACpCC,KAAM,EAAKN,MAAMO,UACjBC,WAAW,EACXC,GAAoB,IAAhBC,KAAKC,aAEb,EAAKX,MAAMC,aAAa,K,EAG5BW,cAAgB,SAAAjB,GACZ,EAAKK,MAAMa,UAAUlB,EAAEG,OAAOC,Q,uDAG9B,OACI,8BACI,iCACI,uBAAOA,MAAOe,KAAKd,MAAMO,UAAWQ,SAAUD,KAAKpB,aAAcsB,KAAK,OAAOC,UAAU,eACvF,wBAAQC,QAASJ,KAAKZ,cAAee,UAAU,cAAcD,KAAK,SAAlE,SACI,mBAAGC,UAAU,yBAEjB,qBAAKA,UAAU,SAAf,SACI,yBAAQE,KAAK,QAAQJ,SAAUD,KAAKF,cAAeK,UAAU,cAA7D,UACI,wBAAQlB,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,uC,GA/BMqB,a,QC+BnBC,MAhCf,YAA+C,IAA/Bf,EAA8B,EAA9BA,KAAMD,EAAwB,EAAxBA,MAAOD,EAAiB,EAAjBA,QAASkB,EAAQ,EAARA,KAAQ,EACVC,mBAAS,QADC,mBACnCC,EADmC,KACzBC,EADyB,KAqB1C,OACI,8BACI,sBAAKR,UAAWO,EAAhB,UACI,oBAAIP,UAAS,oBAAeK,EAAKd,UAAY,YAAc,IAA3D,SAAkEF,IAClE,wBAAQW,UAAU,eAAeC,QAfrB,WACpBd,EAAQC,EAAMqB,KAAI,SAACC,GACf,OAAIA,EAAKlB,KAAOa,EAAKb,GACV,2BACAkB,GADP,IACanB,WAAYmB,EAAKnB,YAG3BmB,OAQH,SAA2D,mBAAGV,UAAU,mBACxE,wBAAQA,UAAU,YAAYC,QAxBpB,SAACvB,GACnB,IAAMiC,EAAWvB,EAAMwB,QAAO,SAAAC,GAAE,OAAIA,EAAGrB,KAAOa,EAAKb,MACnDgB,EAAY,gBACZM,YAAW,WACP3B,EAAQwB,KACN,MAmBE,SAAsD,mBAAGX,UAAU,yBCzB9De,E,uKACP,IAAD,OACL,OACI,qBAAKf,UAAU,iBAAf,SACI,oBAAIA,UAAU,YAAd,SACKH,KAAKd,MAAMiC,SAASP,KAAI,SAAAJ,GAAI,OACzB,cAAC,EAAD,CAAoBhB,KAAMgB,EAAKhB,KAAMD,MAAO,EAAKL,MAAMK,MAAOD,QAAS,EAAKJ,MAAMI,QAASkB,KAAMA,GAAtFA,EAAKb,e,GANFW,aCqDvBc,MAnDf,WAAgB,IAAD,EACqBX,mBAAS,IAD9B,mBACNhB,EADM,KACKN,EADL,OAEYsB,mBAAS,IAFrB,mBAENlB,EAFM,KAECD,EAFD,OAGemB,mBAAS,OAHxB,mBAGNY,EAHM,KAGEtB,EAHF,OAImBU,mBAAS,IAJ5B,mBAINU,EAJM,KAIIG,EAJJ,KAgCb,OAdAC,qBAAU,WACR,GAAsC,OAAlCC,aAAaC,QAAQ,SAAkB,CACzC,IAAIC,EAAQC,KAAKC,MAAMJ,aAAaC,QAAQ,UAC5CnC,EAAQoC,MAET,IAEHH,qBAAU,YApBY,WACpB,OAAQF,GACN,IAAK,YACHC,EAAY/B,EAAMwB,QAAO,SAAAP,GAAI,OAAuB,IAAnBA,EAAKd,cACtC,MACF,IAAK,cACH4B,EAAY/B,EAAMwB,QAAO,SAAAP,GAAI,OAAuB,IAAnBA,EAAKd,cACtC,MACF,QACE4B,EAAY/B,IAYhBsC,GACAL,aAAaM,QAAQ,QAASH,KAAKI,UAAUxC,MAC5C,CAAC8B,EAAQ9B,IAKV,sBAAKY,UAAU,MAAf,UACE,iCACE,qDAEF,cAAC,EAAD,CACEV,UAAWA,EACXF,MAAOA,EACPD,QAASA,EACTH,aAAcA,EACdY,UAAWA,IAGb,cAAC,EAAD,CAAMR,MAAOA,EAAOD,QAASA,EAAS6B,SAAUA,EAC9CG,YAAaA,EAAaD,OAAQA,QCtC3BW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a70166ac.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Form extends Component {  \r\n    imputHandler = e => {\r\n        console.log(e.target.value);\r\n        this.props.setInputText(e.target.value);\r\n    };\r\n\r\n    submitHandler = e =>{\r\n        e.preventDefault();\r\n        this.props.setTodo([...this.props.todos,{\r\n            text: this.props.inputText, \r\n            completed: false,\r\n            id: Math.random() * 1000\r\n        }]);\r\n        this.props.setInputText('');\r\n        \r\n    };\r\n    statusHandler = e => {\r\n        this.props.setStatus(e.target.value);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form>\r\n                    <input value={this.props.inputText} onChange={this.imputHandler} type=\"text\" className=\"todo-input\" />\r\n                    <button onClick={this.submitHandler} className=\"todo-button\" type=\"submit\">\r\n                        <i className=\"fas fa-plus-square\"></i>\r\n                    </button>\r\n                    <div className=\"select\">\r\n                        <select name=\"todos\" onChange={this.statusHandler} className=\"filter-todo\">\r\n                            <option value=\"all\">All</option>\r\n                            <option value=\"completed\">Completed</option>\r\n                            <option value=\"uncompleted\">Uncompleted</option>\r\n                        </select>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\nfunction Todo({ text, todos, setTodo, todo }) {\r\n    const [divClass, setDivClass] = useState(\"todo\");\r\n    const deleteHandler = (e) => {\r\n        const novoTodo = todos.filter(el => el.id !== todo.id);\r\n        setDivClass(\"todo deleted\");\r\n        setTimeout(() => {\r\n            setTodo(novoTodo)}\r\n            , 800);\r\n    };\r\n\r\n    const completeHandler = () => {\r\n        setTodo(todos.map((item) => {\r\n            if (item.id === todo.id) {\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                }\r\n            }\r\n            return item\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={divClass}>\r\n                <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\r\n                <button className=\"complete-btn\" onClick={completeHandler}><i className=\"fas fa-check\"></i></button>\r\n                <button className=\"trash-btn\" onClick={deleteHandler}><i className=\"fas fa-trash\"></i></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React, { Component } from 'react'\r\nimport Todo from './Todo'\r\nexport default class TodoList extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"todo-container\">\r\n                <ul className=\"todo-list\">\r\n                    {this.props.filtered.map(todo => (\r\n                        <Todo key={todo.id} text={todo.text} todos={this.props.todos} setTodo={this.props.setTodo} todo={todo}/>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import './App.css';\nimport { useState, useEffect } from \"react\";\nimport Form from './components/Form';\nimport List from './components/Todolist';\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodo] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filtered, setFiltered] = useState([]);\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFiltered(todos.filter(todo => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFiltered(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFiltered(todos);\n        break;\n    }\n  }\n  useEffect(() =>{\n    if (localStorage.getItem(\"todos\") !== null){\n      let local = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodo(local);  \n    }\n  }, []);\n\n  useEffect(() => {\n    filterHandler();\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [status, todos]);\n  \n \n  \n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Diogo - Todo List</h1>\n      </header>\n      <Form\n        inputText={inputText}\n        todos={todos}\n        setTodo={setTodo}\n        setInputText={setInputText}\n        setStatus={setStatus}\n      >\n      </Form>\n      <List todos={todos} setTodo={setTodo} filtered={filtered}\n        setFiltered={setFiltered} status={status} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}